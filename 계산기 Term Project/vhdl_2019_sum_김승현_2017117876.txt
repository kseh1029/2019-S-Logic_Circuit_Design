library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity ALU is
	port(a,b : in std_logic_vector (7 downto 0);
	sel : in std_logic_vector (3 downto 0);
	y : out std_logic_vector (7 downto 0));
end ALU;

architecture Behavioral of ALU is
begin
	process (a,b,sel)
	begin
		if ( (sel(3) = '0') and (sel(2) = '0') ) then
			Arithmetic: case sel (1 downto 0) is
				when "00" => y <= a;

				when "01" => y <= a+1;

				when "10" => y <= a+b;

				when others => y <= a-1; -- when "11"
			end case Arithmetic;
		elsif ( (sel(3) = '0') and (sel(2) = '1') ) then
			Logic: case sel (1 downto 0) is

				when "00" => y <= a and b;

				when "01" => y <= a or b;

				when "10" => y <= a xor b;

				when others => y <= not(a); -- when "11"

			end case Logic;
		elsif ((sel(3) = '1')) then
			Shift: case sel (1 downto 0) is

				when "00" => y <= a;

				when "01" => y <= a(6 downto 0) & a(7);

				when "10" => y <= a(0) & a (7 downto 1);

				when others => y <= "00000000"; -- when "11"

			end case Shift;
		end if;
	end process;
end Behavioral;